name: Build & Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'LBRY version'
        required: true

env:
  LBRY_VERSION: ${{ github.event.inputs.version }}
  SHARE_DOMAIN_URL: https://open.lbry.com

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest]
        target: [linux, windows, mac]
        exclude:
          - os: macOS-latest
            target: linux
          - os: macOS-latest
            target: windows
          - os: ubuntu-latest
            target: mac
    name: ${{ ( matrix.target == 'linux' && 'Linux' ) ||
              ( matrix.target == 'windows' && 'Windows' ) ||
              ( matrix.target == 'mac' && 'macOS' ) }}
    env:
      TARGET: ${{ matrix.target }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
          ref: v${{ env.LBRY_VERSION }}
      - name: Install build tools
        run: |
          if [ "${{ matrix.os }}" = "macOS-latest" ]; then
            mkdir -p /tmp/git-lfs && curl -L https://github.com/github/git-lfs/releases/download/v2.3.1/git-lfs-darwin-amd64-2.3.1.tar.gz | tar -xz -C /tmp/git-lfs --strip-components 1
            export PATH="/tmp/git-lfs:$PATH"
          else
            sudo apt-get -qq update
            sudo apt-get install --no-install-recommends -y gcc-multilib g++-multilib wget
            curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.6.0
            export PATH="$HOME/.yarn/bin:$PATH"
          fi
      - name: Download blockchain headers
        run: |
          git lfs pull
          wget https://headers.lbry.io/blockchain_headers_latest --directory-prefix=static/daemon/headers
      - name: Build
        run: |
          if [ "${TARGET}" = "windows" ]; then
            ENVS=`env | grep -iE '(DEBUG|NODE_|ELECTRON_|YARN_|NPM_|CI|CIRCLE|TRAVIS|APPVEYOR_|CSC_|_TOKEN|_KEY|AWS_|STRIP|BUILD_|TARGET)([A-Z]|_)*=' | sed -n '/^[^\t]/s/=.*//p' | sed '/^$/d' | sed 's/^/-e /g' | tr '\n' ' '`
            docker run $ENVS --rm \
              -v ${PWD}:/project \
              electronuserland/builder:wine \
              /bin/bash -c "env | grep -v '\r' | grep -iE 'DEBUG|TARGET|NODE_|ELECTRON_|YARN_|NPM_|CI|CIRCLE|TRAVIS|APPVEYOR_|CSC_|GH_|GITHUB_|BT_|AWS_|STRIP|BUILD_|WIN_' && yarn --link-duplicates --pure-lockfile && yarn build --win --publish onTag"
          elif [ "${TARGET}" = "mac" ]; then
            yarn --link-duplicates --pure-lockfile
            yarn build --publish onTag
          elif [ "${TARGET}" = "linux" ]; then
            yarn --link-duplicates --pure-lockfile
            yarn build --linux --publish onTag
          fi
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ ( matrix.target == 'linux' && 'Linux' ) ||
                    ( matrix.target == 'windows' && 'Windows' ) ||
                    ( matrix.target == 'mac' && 'macOS' ) }}
          path: |
            dist/electron/LBRY_${{ env.LBRY_VERSION }}.deb
            dist/electron/LBRY_${{ env.LBRY_VERSION }}.AppImage
            dist/electron/LBRY_${{ env.LBRY_VERSION }}.exe
            dist/electron/LBRY_${{ env.LBRY_VERSION }}.dmg
  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Delete the previous release (if exists)
        run: curl https://raw.githubusercontent.com/paveloom-f/lbry-desktop/master/.github/scripts/delete_release.bash | bash
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
          GH_REPO: https://api.github.com/repos/paveloom-f/lbry-desktop/releases
      - name: Create a release
        uses: softprops/action-gh-release@v1
        with:
          body: Use at your own risk.
          name: ${{ env.LBRY_VERSION }}
          tag_name: v${{ env.LBRY_VERSION }}
          files: |
            Linux/LBRY_${{ env.LBRY_VERSION }}.deb
            Linux/LBRY_${{ env.LBRY_VERSION }}.AppImage
            Windows/LBRY_${{ env.LBRY_VERSION }}.exe
            macOS/LBRY_${{ env.LBRY_VERSION }}.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
